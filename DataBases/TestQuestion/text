redundancy - inflation of data
entities - how does data meet this  (name, attribute, value)

view - What that of objective gives access without being able to change (hide implementation of data)
relations (importance? why?) - functional dependencies (what are the functional dependencies)

what are the things that are displayed on diagrams? what are the components?

comparison operators < > = !=
record == rows

primary key - importance when sorting
major sort key (minor sort key)- sorting by more than one record

role of the 'between' operator - select values within a given ranges
'count' and 'sum' differences

count - records
sum - cumulative values of attribute
where and having
where - filter records from a result
having - filter values from a group
update - make changes

alter - make change to the table structure
delete - removes data
like and wildcards -

% in front or behind (case sensitive)
a view is a physical table - virtual table

drop index - remove index
backup - create a backup

first normal form - no repeating groups (Each thing describes one thing well)
repeating group - more than one piece a data a one cell
second normal form - dependencies on the primary key (everyone else get your own table)
third normal form - second form and level and value (multi-level dependencies) A-B B-C A-C (table that describes other tables)
forth normal form - all about one thing (data that has been reduced)
